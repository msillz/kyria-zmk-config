#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define ENC2 1
#define ENC3 2
#define FNC  3
#define NUM  4
#define NAV  5
#define OSL 6
#define PTAB LC(PG_UP)
#define NTAB LC(PG_DN)
#define NWIN LA(TAB)
#define PWIN LS(LA(TAB))
#define XSLV LA(LC(V))
#define PDESK LC(LG(RIGHT))
#define NDESK LC(LG(LEFT))
#define LR_DOWN LA(DOWN)
#define LR_UP LA(UP)

&left_encoder { resolution = <2>; };

&sk { release-after-ms = <1000>; };

&sl { release-after-ms = <1000>; };

/ {
    behaviors {
        // hm: homerow_mods {
        //   compatible = "zmk,behavior-hold-tap";
        //   label = "HOMEROW_MODS";
        //   #binding-cells = <2>;
        //   tapping_term_ms = <200>;
        //   flavor = "tap-preferred";
        //   bindings = <&kp>, <&cp>;
        // };

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <220>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };

        mx: layer_tap_osl {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_OSL";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping_term_ms = <200>;
            bindings = <&mo>, <&sl>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   | bksp |
            // | TAB/FN|  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   '   |ent/fn|
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | ---     |  ctrl   |  |   ctrl  |  blank  |  N   |  M    |  ,    |  .   |   /   |shft/;|
            //                     | ENC  |Alt/En| Ctrl |  Nav    |   del   |  |   bksp  |  num    | spc  | Iso   | ENC2  |

            bindings = <
&kp ESC    &kp Q  &kp W  &kp E  &kp R  &kp T                                             &kp Y  &kp U  &kp I      &kp O    &kp P          &kp BSPC
&kt TAB    &kp A  &kp S  &kp D  &kp F  &kp G                                             &kp H  &kp J  &kp K      &kp L    &kp SEMICOLON  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C  &kp V  &kp B  &none             &none  &none  &none      &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH       &none
                         &none  &none  &none  &kp LEFT_CONTROL  &none  &none  &kp SPACE  &none  &none  &none
            >;
        };

        num_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // | `     |  !  |  +  |  [   |  ]   |  =   |                                          |  %   |  7    |  8    |  9   |   *   | /    |
            // | #     |  @  |  _  |  (   |  )   |  -   |                                          |  $   |  4    |  5    |  6   |   +   | ---  |
            // | ~     |  \  |  &  |  {   |  }   |  |   |   ---   |  ---    |  |   ---   |  ---    |  ^   |  1    |  2    |  3   |   -   | ---  |
            //                     | ENC  | ---  | ---  |   ---   |  ---    |  |   ---   |  ---    | ---  | ---   | ---   |

            bindings = <
&kp GRAVE  &kp EXCL  &kp PLUS   &kp LBKT  &kp RBKT  &kp EQUAL                                  &kp CARET  &kp N7   &kp N8  &kp N9  &kp KP_MULTIPLY  &kp KP_DIVIDE
&kp HASH   &kp AT    &kp UNDER  &kp LPAR  &kp RPAR  &kp MINUS                                  &kp PRCNT  &kp N4   &kp N5  &kp N6  &kp KP_PLUS      &none
&kp TILDE  &kp BSLH  &kp AMPS   &kp LBRC  &kp RBRC  &kp PIPE   &trans  &trans  &trans  &trans  &kp DLLR   &kp N1   &kp N2  &kp N3  &kp KP_MINUS     &trans
                                &trans    &trans    &trans     &trans  &trans  &trans  &trans  &kp N0     &kp DOT  &trans
            >;
        };
    };
};
